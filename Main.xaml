<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1135.3333333333333,8107.333333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="- All PDF files are individually read from a specified directory (&quot;InvoiceData&quot;) &#xA;- Identify the company using the &quot;company code&quot; from which the invoice originates.&#xA;- Parse the necessary data from the invoice into variables&#xA;- Add variable data to a DataTable.&#xA;- Add data from DataTables to CSV files.&#xA;- Move the original invoice PDFs to a processed directory for the next run." DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="888,8042.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_invoiceRow" />
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="x:String" Name="pdfFile" />
      <Variable x:TypeArguments="x:String" Name="companyCode" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_invoiceHeader" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Create a dataTable to store values from the Invoice Header." DataTable="[dt_invoiceHeader]" DisplayName="Build InvoiceHeader Data Table" sap:VirtualizedContainerService.HintSize="826,105.33333333333333" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CompanyName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ReferenceNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoiceDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DueDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CompanyCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BankAccountNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AmountExclVAT&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VATAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;TotalAmount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Create a dataTable to store values from the InvoiceRow&#xA;" DataTable="[dt_invoiceRow]" DisplayName="Build Invoice Row Data Table" sap:VirtualizedContainerService.HintSize="826,105.33333333333333" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Quantity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Unit&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;UnitPrice&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VATPercent&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VAT&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total&quot; msdata:Caption=&quot;&quot; type=&quot;xs:double&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;RowNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <Assign sap2010:Annotation.AnnotationText="Create an array variable to store the pdf files paths. " DisplayName="Assign _ Pdf Directory (InvoiceData Folder)" sap:VirtualizedContainerService.HintSize="826,116" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("InvoiceData", "*.pdf")]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through each file in the InvoiceData folder and select only the pdf files." DisplayName="For Each - PDF file in the InvoiceData Folder" sap:VirtualizedContainerService.HintSize="826,6816.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[files]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="pdfFile" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="792,6596" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="invoiceNumber" />
              <Variable x:TypeArguments="x:String" Name="companyName" />
              <Variable x:TypeArguments="x:String" Name="referenceNumber" />
              <Variable x:TypeArguments="x:String" Name="InvoiceDate" />
              <Variable x:TypeArguments="x:String" Name="dueDate" />
              <Variable x:TypeArguments="x:String" Name="bankAccountNumber" />
              <Variable x:TypeArguments="x:String" Name="vatAmount" />
              <Variable x:TypeArguments="x:String" Name="amountExclVAT" />
              <Variable x:TypeArguments="x:String" Name="totalAmount" />
              <Variable x:TypeArguments="x:String" Name="rowText" />
              <Variable x:TypeArguments="s:String[]" Name="splittedInvoiceRow" />
              <Variable x:TypeArguments="x:Int32" Name="rowNumber" />
              <Variable x:TypeArguments="s:String[]" Name="splittedRow" />
              <Variable x:TypeArguments="x:String" Name="Pdf_Text" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log PDF file names " sap:VirtualizedContainerService.HintSize="750,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[pdfFile]" />
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[pdfFile]" sap:VirtualizedContainerService.HintSize="750,84" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[Pdf_Text]" />
            <ui:LogMessage DisplayName="Log PDF Text" sap:VirtualizedContainerService.HintSize="750,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[Pdf_Text]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <Assign sap2010:Annotation.AnnotationText="Extract the company code value from the pdf invoice&#xA;" DisplayName="Assign _ Company Code " sap:VirtualizedContainerService.HintSize="750,130.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[companyCode]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Pdf_Text.Substring(pdf_Text.IndexOf("Company Code:") + 14, 9 ).Trim()]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Switch cases depending on the company codes.&#xA;Everytime a new company is contracted, the company code needs to be placed here along with the specific automations &#xA;" DisplayName="Switch _ Between each Company case" Expression="[companyCode]" sap:VirtualizedContainerService.HintSize="750,2744" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence x:Key="1234567-8" DisplayName="Sequence _ Extract the variables and insert them into the CSV file." sap:VirtualizedContainerService.HintSize="496,1434.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign - Invoice Number" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[InvoiceNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Laskun numero:") + 15,
	(Pdf_Text.IndexOf("Eräpäivä:") - (Pdf_Text.IndexOf("Laskun numero:") + 15)
	)
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - companyName" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("%") + 1,
	(Pdf_Text.IndexOf("Viitenumero:") - (Pdf_Text.IndexOf("%") + 1)
	)
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - ReferenceNumber (Viitenumero)" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[referenceNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Viitenumero:") + 13, 8
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Invoice Date " sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Pdf_Text.Substring(Pdf_Text.IndexOf("Päiväys:") + 9, 10)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Due Date" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dueDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Eräpäivä:") + 9,
	(Pdf_Text.IndexOf("Customer:") - (Pdf_Text.IndexOf("Eräpäivä:") + 9)
	)
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - IBAN" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bankAccountNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Pdf_Text.Substring(Pdf_Text.IndexOf("IBAN") + 5, 23)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign _ Amount Excluding VAT" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[amountExclVAT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Amount excl. VAT") + 17,
	(Pdf_Text.IndexOf("€", (Pdf_Text.IndexOf("Amount excl. VAT") + 17)) - 
	(Pdf_Text.IndexOf("Amount excl. VAT") + 17)
	)
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign _ VAT Amount " sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[vatAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
Pdf_Text.IndexOf("VAT", Pdf_Text.IndexOf("Amount excl. VAT")+17)+3,   
(Pdf_Text.IndexOf("€", (Pdf_Text.IndexOf("VAT", Pdf_Text.IndexOf("Amount excl. VAT")+17)+6)) - 
(Pdf_Text.IndexOf("VAT", Pdf_Text.IndexOf("Amount excl. VAT")+17)+6))
).Trim()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign _ Total Amount" sap:VirtualizedContainerService.HintSize="434,86" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[totalAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
Pdf_Text.IndexOf("Total", Pdf_Text.IndexOf("Amount excl. VAT")+17)+6,   
(Pdf_Text.IndexOf("€", (Pdf_Text.IndexOf("Total", Pdf_Text.IndexOf("Amount excl. VAT")+17)+6)) - 
(Pdf_Text.IndexOf("Total", Pdf_Text.IndexOf("Amount excl. VAT")+17)+6))
).Trim()]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xD;&#xA;&#x9;invoiceNumber,&#xD;&#xA;&#x9;companyName,&#xD;&#xA;&#x9;referenceNumber, &#xD;&#xA;&#x9;InvoiceDate,&#xD;&#xA;&#x9;dueDate,&#xD;&#xA;&#x9;companyCode,&#xD;&#xA;&#x9;bankAccountNumber, &#xD;&#xA;&#x9;Convert.ToDouble(amountExclVAT.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;)),&#xD;&#xA;&#x9;Convert.ToDouble(vatAmount.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;)),&#xD;&#xA;&#x9;Convert.ToDouble(totalAmount.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;))&#xD;&#xA;&#x9;}]" DataTable="[dt_invoiceHeader]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="434,191.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
              </Sequence>
              <Sequence x:Key="1234567-9" DisplayName="Sequence _ Extract the variables and insert them into the CSV file (2)" sap:VirtualizedContainerService.HintSize="710,2469.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="NEWdueDate" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign - Invoice Number" sap:VirtualizedContainerService.HintSize="648,86" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[invoiceNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Invoicenumber:") + 15,
	9
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Company Name" sap:VirtualizedContainerService.HintSize="648,86" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("sivu 1/1") + 8,
	(Pdf_Text.IndexOf("Invoice Date:", (Pdf_Text.IndexOf("sivu 1/1") + 8)) - 
	(Pdf_Text.IndexOf("sivu 1/1") + 8)
	)
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Reference Number" sap:VirtualizedContainerService.HintSize="648,86" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[referenceNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Reference:") + 11, 9
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - Invoice Date" sap:VirtualizedContainerService.HintSize="648,86" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Invoice Date:") + 14, 12
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - IBAN" sap:VirtualizedContainerService.HintSize="648,86" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bankAccountNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("IBAN:") + 5, 23
).Trim]</InArgument>
                  </Assign.Value>
                </Assign>
                <Sequence DisplayName="Sequence _ Extracting Header Data from Rows" sap:VirtualizedContainerService.HintSize="648,1497.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sc:IEnumerable" Name="splittedHeaderRow" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="586,86" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[rowText]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Duedate") + 9,
	(Pdf_Text.IndexOf("Component Oy", (Pdf_Text.IndexOf("Duedate") + 9)) - 
	(Pdf_Text.IndexOf("Duedate") + 9)
	)
).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="586,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sc:IEnumerable">[splittedHeaderRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[rowText.Split(Environment.NewLine)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each _ Row in the Splitted Rows" sap:VirtualizedContainerService.HintSize="586,1135.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[splittedHeaderRow]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,945.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:String[]" Name="splittedRow" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row.Trim.Length &gt; 0]" DisplayName="If _ There is text on row" sap:VirtualizedContainerService.HintSize="510,356.6666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,172.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign _ Split rows into seperate indexes" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[splittedRow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[row.Split(" ")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8" />
                            </If.Else>
                          </If>
                          <Assign DisplayName="Assign - Due Date" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dueDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[splittedRow(3).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Amount Excluding VAT" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[amountExclVAT]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[splittedRow(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - VAT Amount" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[vatAmount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[splittedRow(1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - Total Amount" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[totalAmount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[splittedRow(2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {&#xA;&#x9;invoiceNumber,&#xA;&#x9;companyName,&#xA;&#x9;referenceNumber, &#xA;&#x9;InvoiceDate,&#xA;&#x9;dueDate,&#xA;&#x9;companyCode,&#xA;&#x9;bankAccountNumber, &#xA;&#x9;Convert.ToDouble(amountExclVAT.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;)),&#xA;&#x9;Convert.ToDouble(vatAmount.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;)),&#xA;&#x9;Convert.ToDouble(totalAmount.Replace(&quot;,&quot;,&quot;.&quot;).Replace(&quot; &quot;, &quot;&quot;))&#xA;&#x9;}]" DataTable="[dt_invoiceHeader]" DisplayName="Add Data Row to dt_invoiceHeader" sap:VirtualizedContainerService.HintSize="648,191.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
              </Sequence>
            </Switch>
            <ui:Comment sap:VirtualizedContainerService.HintSize="648,56.666666666666664" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Parse Row Data&#xA;" />
            <Sequence DisplayName="Parse Invoice Row Data into variables" sap:VirtualizedContainerService.HintSize="648,2431.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign _ rowText" sap:VirtualizedContainerService.HintSize="586,86" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[rowText]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Pdf_Text.Substring(
	Pdf_Text.IndexOf("Total") + 5, 
	Pdf_Text.IndexOf(	"Amount excl. VAT") - (Pdf_Text.IndexOf("Total") + 5)
).tRIM]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign _ splittedInvoiceRow" sap:VirtualizedContainerService.HintSize="586,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[splittedInvoiceRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[rowText.Split(Environment.NewLine)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign _ rowNumber" sap:VirtualizedContainerService.HintSize="586,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[rowNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each _ Row in the Splitted Invoice Rows" sap:VirtualizedContainerService.HintSize="586,1944" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[splittedInvoiceRow]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1754" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[row.Trim.Length &gt; 0]" sap:VirtualizedContainerService.HintSize="510,1666.6666666666667" sap2010:WorkflowViewState.IdRef="If_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="476,1452" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="description" />
                              <Variable x:TypeArguments="x:String" Name="quantity" />
                              <Variable x:TypeArguments="x:String" Name="unit" />
                              <Variable x:TypeArguments="x:String" Name="unitPrice" />
                              <Variable x:TypeArguments="x:String" Name="vatPercent" />
                              <Variable x:TypeArguments="x:String" Name="vat" />
                              <Variable x:TypeArguments="x:String" Name="total" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign _ Increase rowNumber by 1" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[rowNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[rowNumber + 1]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ splittedRow" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[splittedRow]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[row.Split(" ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ Description" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[description]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(0) + " " + splittedRow(1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ Quantity" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[quantity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(2)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ Unit" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[unit]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(3)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ UnitPrice" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_32">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[unitPrice]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(4)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ VAT Percentage" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vatPercent]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(5)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ VAT" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[vat]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(6)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign _ Total" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[splittedRow(7)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Convert variables to appropriate types and insert them into the dataTable" ArrayRow="[New Object() {&#xD;&#xA;&#x9;description,&#xD;&#xA;&#x9;Convert.ToInt32(quantity),&#xD;&#xA;&#x9;unit,&#xD;&#xA;&#x9;Convert.ToDouble(unitPrice.Replace(&quot;€&quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;)) ,&#xD;&#xA;&#x9;Convert.ToInt32(vatPercent.Replace(&quot;%&quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;))  ,&#xD;&#xA;&#x9;Convert.ToDouble(vat.Replace(&quot;€&quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;))  ,&#xD;&#xA;&#x9;Convert.ToDouble(total.Replace(&quot;€&quot;, &quot;&quot;).Replace(&quot;,&quot;, &quot;.&quot;))  ,&#xD;&#xA;&#x9;invoiceNumber ,&#xD;&#xA;&#x9;rowNumber.ToString&#xD;&#xA;}]" DataTable="[dt_invoiceRow]" DisplayName="Add Data Row to dt_invoiceRow Datatable" sap:VirtualizedContainerService.HintSize="434,236.66666666666666" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddDataRow>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11" />
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Create a folder named Processed_Invoices.&#xD;&#xA;This folder is meant to store the pdf files in originally from the InvoiceData folder that have been processed&#xD;&#xA;&#xD;&#xA;Move all the pdf invoices that have been processed into this folder." DisplayName="Move original invoice PDFs to a processed directory" sap:VirtualizedContainerService.HintSize="648,492.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create &quot;Processed_Invoices&quot; Folder" sap:VirtualizedContainerService.HintSize="388,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="Processed_Invoices" />
              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="Processed_Invoices" DisplayName="Move Processed Files to Processed_Invoices Folder" sap:VirtualizedContainerService.HintSize="388,164.66666666666666" sap2010:WorkflowViewState.IdRef="MoveFile_2" Path="[pdfFile]" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:Comment sap:VirtualizedContainerService.HintSize="724,56.666666666666664" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Write Data to CSV File&#xA;" />
    <ui:WriteCsvFile AddHeaders="True" sap2010:Annotation.AnnotationText="Write the data from dt_invoiceHeader datatable into the CSV File" DataTable="[dt_invoiceHeader]" Delimitator="Comma" DisplayName="Write into &quot;InvoiceHeaderData.csv&quot; CSV File" FilePath="InvoiceHeaderData.csv" sap:VirtualizedContainerService.HintSize="724,190" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" ShouldQuote="True">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCsvFile>
    <ui:WriteCsvFile AddHeaders="True" sap2010:Annotation.AnnotationText="Write the data from dt_invoiceRow datatable into the CSV File" DataTable="[dt_invoiceRow]" Delimitator="Comma" DisplayName="Write into &quot;invoiceRowData.csv&quot; CSV File" FilePath="InvoiceRowData.csv" sap:VirtualizedContainerService.HintSize="724,190" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" ShouldQuote="True">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCsvFile>
  </Sequence>
</Activity>